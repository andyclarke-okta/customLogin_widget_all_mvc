
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>Okta Sign-in Widget</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!--
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>

    <!--
        <script src="~/Scripts/okta-sign-in.js"></script>
        <link href="~/Content/okta-sign-in.css" type="text/css" rel="stylesheet" />
        <link href="~/Content/okta-theme.css" type="text/css" rel="stylesheet" />
    -->
    <!-- Latest CDN production Javascript and CSS -->
    <script src="https://global.oktacdn.com/okta-signin-widget/@TempData["version"]/js/okta-sign-in.min.js" type="text/javascript"></script>

    <link href="https://global.oktacdn.com/okta-signin-widget/@TempData["version"]/css/okta-sign-in.min.css" type="text/css" rel="stylesheet" />


    <!--    for widget version 2.x use below style-->
    @*<script src="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/@TempData["version"]/js/okta-sign-in.min.js"
            type="text/javascript"></script>
    <link href="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/@TempData["version"]/css/okta-sign-in.min.css"
          type="text/css"
          rel="stylesheet" />
    <link href="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/@TempData["version"]/css/okta-theme.css"
        type="text/css"
        rel="stylesheet" />*@


    <!--xhook implementation-->
    <script src="https://jpillora.com/xhook/dist/xhook.js" type="text/javascript"></script>


</head>
<body>

    <div id="okta-login-container"></div>


    <script type="text/javascript">

        var myOktaOrg = "@TempData["oktaOrg"]";
        var clientId = "@TempData["clientId"]";
        var usernamePrefix = "@TempData["usernamePrefix"]" + "__";
        var myLocation = "none";
        var landing = "/AltLanding/UnprotectedLanding"

  

        //xhook.before(function (request) {

        //    if (request.url.match(/\/api\/v1\/authn\/recovery\/password/))
        //        request.url = "http://id-dev.assurant.com/api/recovery/password?appId=" +clientId;
        //    if (request.url.match(/\/api\/v1\/authn\/factors\/emf.*\/verify/))
        //        request.url = "http://id-dev.assurant.com/api/factors/emf/verify?appId=" +clientId;
        //    if (request.url.match(/\/api\/v1\/authn\/factors\/sms.*\/verify/)
        //        request.url = "http://id-dev.assurant.com/api/factors/sms/verify?appId=" +clientId;
        //    if (request.url.match(/\/api\/v1\/authn\/factors/))
        //        request.url = "http://id-dev.assurant.com/api/factors/enroll?appId=" +clientId;
        //});

        //var dataStatus;
        //var dataFactors;
        //xhook.after(function (request, response) {
        //    if (request.url.match(/authn/)) {
        //        var myJson = JSON.parse(response.data);
        //        dataStatus = myJson.status;
        //        if (dataStatus === "MFA_REQUIRED") {
        //            debugger;
        //            console.log("received MFA_REQUIRED");
        //            //check for MFA factor; provider = DEL_OATH
        //            dataFactors = myJson._embedded.factors;
        //            for (var i = 0; i < dataFactors.length; i++) {
        //                var currentFactor = dataFactors[i];
        //                for (var key in currentFactor) {
        //                    if (currentFactor.hasOwnProperty(key)) {
        //                        console.log("key=" + key + " value=" + currentFactor[key])
        //                        if (key === "provider" && currentFactor[key] === "DEL_OATH") {
        //                            console.log("found OnPrem MFA factor" + currentFactor);
        //                            //delete OnPrem factor from response
        //                            myJson._embedded.factors.splice(i, 1);
        //                            response.data = JSON.stringify(myJson);
        //                            response.text = JSON.stringify(myJson);
        //                            break;
        //                        }

        //                    }

        //                }
        //            }
        //        }
        //        if (dataStatus === "MFA_ENROLL") {
        //            console.log("received MFA_ENROLL");
        //            //check and remove MFA provider DEL_OATH
        //        }
        //    }

        //    debugger;
        //});


        // Handle GET / Querystring Params...
        function getParameterByName(name, url) {
            // Set default for url
            if (!url) url = window.location.href;
            name = name.replace(/[\[\]]/g, "\\$&");
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            // If not found
            if (!results) return null;
            // If no value found
            if (!results[2]) return '';
            // Result found... just decode 1st.
            console.log('name', results[2]);
            var parameter_decoded = decodeURIComponent(results[2]);
            console.log('parameter_decoded', parameter_decoded);
            return decodeURIComponent(parameter_decoded);
        }

        // Handle the logic to prioritize the URL for redirect.
        function getOpt(o1, o2, o3) {
            // Set defaults for inbound
            if (o1 != null) return o1;
            if (o2 != null) return o2;
            if (o3 != null) return o3;
            return window.location.href;
        }

    </script>

    <script type="text/javascript">


        (function () {
            var url = window.location.href;
            var arr = url.split("/");
            var result = arr[0] + "//" + arr[2];
            myLocation = result;

        })();


        //  Handle Return URLs
        //debugger;
        var relayState = getParameterByName('relaystate');
        if (relayState != null)
            console.log('relayState', relayState);

        var fromURI = getParameterByName('fromURI');
        if (fromURI != null)
            console.log('fromURI', fromURI);

        var MyInfo = getParameterByName('MyInfo');
        if (MyInfo != null)
            console.log('MyInfo', MyInfo);

        function getOpt() {
            //set hierarchy for choosing landing url
            var nextUrl = myLocation + landing;
            //var nextUrl = myOktaOrg;
            if (MyInfo != null) {
                nextUrl = MyInfo;
            }
            if (relayState != null) {
                nextUrl = relayState;
            }
            if (fromURI != null) {
                nextUrl = fromURI;
            }
            return nextUrl;
        }


        var options = {
            baseUrl: myOktaOrg,
            logo: "/img/logo_acme.png",
            features: {
                router: true,
                rememberMe: false,
                smsRecovery: true,
                multiOptionalFactorEnroll: true

            },
            i18n: {
                // Overriding English properties
                'en': {
                    'primaryauth.title': 'Sign in to Acme',
                    'primaryauth.username.placeholder': 'Your Acme Username'
                }
            },
            //"transformUsername": function (username, operation) {
            //    return username.indexOf(usernamePrefix) > -1
            //        ? username
            //        : usernamePrefix + username;
            //}
            helpLinks: {
                help: "/Home/Help"
            }
        };
        var oktaSignIn = new OktaSignIn(options);

        function showLoginWidget() {

            oktaSignIn.renderEl(
                   { el: '#okta-login-container' },
                   function (res) {

                       console.log('User Status ', res.status);
                       console.log('UserId ', res.user.id);

                       if (res.status === 'SUCCESS') {
                           console.log('User %s successfully authenticated %o', res.user.profile.login, res.user);
                  
                           nextURI = getOpt();
                           debugger;
                           // Set Session
                           res.session.setCookieAndRedirect(nextURI);
                           //res.session.setCookieAndRedirect("https://aclarke-neto.oktapreview.com/app/UserHome");
                       }
                   },
                    // Failure callback (invoked if the authentication is unsuccessful
                    // or if there is a failure on authentication)
                    function (err) {
                        // handleErrors(err);
                        console.log("failed to login: %o", err);
                    }
                 );

        }

         // Initiate the login Widget without checking for existing Okta session
         //   showLoginWidget();


        // Detect if user has session...
        $.ajax({
            url: myOktaOrg + '/api/v1/sessions/me',
            type: 'GET',
            xhrFields: { withCredentials: true },
            accept: 'application/json'
        })
		.done(function (meData) {
		    console.log('me: ', meData);
		    console.log('session_id', meData.id);

		    nextURI = getOpt();

		    console.log("Just Redirect Here:", nextURI);
		    //debugger;
		    window.location = nextURI;

		})
		.fail(function (meData, textStatus, error) {
		    console.log('meData: ', meData);
		    console.log('meData.status: ', meData.status);
		    console.log('statusText: ', meData.statusText);
		    console.log('error: ', error);

		    // Initiate the login Widget
		    showLoginWidget();
		});

        console.log('oktaSignIn: ', oktaSignIn);
        console.log('Auth: ', myOktaOrg);

    </script>
</body>
</html>
